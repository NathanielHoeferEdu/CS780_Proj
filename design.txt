Design of CS780 Project

Goal: 
Develop software that identifies the number of commits from developers that add or update comments.
Are certain developers more prone to writing comments?

Requirements:
1. Identify all of the developers contributing to a repository.
2. For each developer, identify all of their commits with diffs and store in a file.
3. Determine how many diffs contain updates/additions to comments and store those comments in a file.

Implementation Ideas:

    Gathering diffs:
    import git

    repo = git.Repo(path="test_repos/pypeln")

    commits = list(repo.iter_commits())

    print repo.git.diff(commits[8], commits[9])

    Possible Regex Start: (#.*(?:\n|\z))|(['"])\1\1(.*?)\1{3}

    Comments to identify:
    C++:
            // This is single Line Comment in C++
            /* This is multi line block comment.
            in C++
            */
            /* Single line block comment */
            Inline comment // inline comment
            Inline block comment /* inline block comment */


(?:\-|\+)(//.*?$|/\*.*?\*/)


Design:

    DevProcessing Class
        repo: str
        developers: Developer[]
        DevProcessing(repo: str)
        store_csv_report(path: str)

    Developer Class
        name: str
        email: str
        diffs: Diff[]
        comments: str[]
        Developer(name: str, email: str)
        diff_count(): int
        comment_count(): int
        add_diff(diff: str)

    Diff Class
        diff: str
        Diff(diff: str)
        comments(): str[]
